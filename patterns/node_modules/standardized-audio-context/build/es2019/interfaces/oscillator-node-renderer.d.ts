import { IAudioNodeRenderer } from 'standardized-audio-context/src/interfaces/audio-node-renderer';
import { IMinimalOfflineAudioContext } from 'standardized-audio-context/src/interfaces/minimal-offline-audio-context';
import { IOfflineAudioContext } from 'standardized-audio-context/src/interfaces/offline-audio-context';
import { IOscillatorNode } from 'standardized-audio-context/src/interfaces/oscillator-node';
import { IPeriodicWave } from 'standardized-audio-context/src/interfaces/periodic-wave';
export interface IOscillatorNodeRenderer<T extends IMinimalOfflineAudioContext | IOfflineAudioContext> extends IAudioNodeRenderer<T, IOscillatorNode<T>> {
    periodicWave: null | IPeriodicWave;
    start: number;
    stop: number;
}
//# sourceMappingURL=oscillator-node-renderer.d.ts.map