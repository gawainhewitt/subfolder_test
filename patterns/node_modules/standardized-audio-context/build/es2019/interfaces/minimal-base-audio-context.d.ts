import { TAudioContextState, TContext, TEventHandler } from 'standardized-audio-context/src/types';
import { IAudioDestinationNode } from 'standardized-audio-context/src/interfaces/audio-destination-node';
import { IAudioListener } from 'standardized-audio-context/src/interfaces/audio-listener';
import { IEventTarget } from 'standardized-audio-context/src/interfaces/event-target';
import { IMinimalBaseAudioContextEventMap } from 'standardized-audio-context/src/interfaces/minimal-base-audio-context-event-map';
export interface IMinimalBaseAudioContext<T extends TContext> extends IEventTarget<IMinimalBaseAudioContextEventMap> {
    readonly currentTime: number;
    readonly destination: IAudioDestinationNode<T>;
    readonly listener: IAudioListener;
    onstatechange: null | TEventHandler<T>;
    readonly sampleRate: number;
    readonly state: TAudioContextState;
}
//# sourceMappingURL=minimal-base-audio-context.d.ts.map