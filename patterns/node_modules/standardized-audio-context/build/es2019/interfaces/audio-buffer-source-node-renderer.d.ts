import { IAudioBufferSourceNode } from 'standardized-audio-context/src/interfaces/audio-buffer-source-node';
import { IAudioNodeRenderer } from 'standardized-audio-context/src/interfaces/audio-node-renderer';
import { IMinimalOfflineAudioContext } from 'standardized-audio-context/src/interfaces/minimal-offline-audio-context';
import { IOfflineAudioContext } from 'standardized-audio-context/src/interfaces/offline-audio-context';
export interface IAudioBufferSourceNodeRenderer<T extends IMinimalOfflineAudioContext | IOfflineAudioContext> extends IAudioNodeRenderer<T, IAudioBufferSourceNode<T>> {
    start: [number, number] | [number, number, number];
    stop: number;
}
//# sourceMappingURL=audio-buffer-source-node-renderer.d.ts.map