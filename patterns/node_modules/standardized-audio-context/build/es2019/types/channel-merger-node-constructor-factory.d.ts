import { TAudioNodeConstructor } from 'standardized-audio-context/src/types/audio-node-constructor';
import { TChannelMergerNodeConstructor } from 'standardized-audio-context/src/types/channel-merger-node-constructor';
import { TChannelMergerNodeRendererFactory } from 'standardized-audio-context/src/types/channel-merger-node-renderer-factory';
import { TGetNativeContextFunction } from 'standardized-audio-context/src/types/get-native-context-function';
import { TIsNativeOfflineAudioContextFunction } from 'standardized-audio-context/src/types/is-native-offline-audio-context-function';
import { TNativeChannelMergerNodeFactory } from 'standardized-audio-context/src/types/native-channel-merger-node-factory';
export type TChannelMergerNodeConstructorFactory = (audioNodeConstructor: TAudioNodeConstructor, createChannelMergerNodeRenderer: TChannelMergerNodeRendererFactory, createNativeChannelMergerNode: TNativeChannelMergerNodeFactory, getNativeContext: TGetNativeContextFunction, isNativeOfflineAudioContext: TIsNativeOfflineAudioContextFunction) => TChannelMergerNodeConstructor;
//# sourceMappingURL=channel-merger-node-constructor-factory.d.ts.map