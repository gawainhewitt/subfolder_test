import { IAudioNode, IAudioParamRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from 'standardized-audio-context/src/interfaces';
import { TActiveInputConnection } from 'standardized-audio-context/src/types/active-input-connection';
import { TContext } from 'standardized-audio-context/src/types/context';
import { TPassiveAudioParamInputConnection } from 'standardized-audio-context/src/types/passive-audio-param-input-connection';
export type TAudioParamConnections<T extends TContext> = Readonly<{
    activeInputs: Set<TActiveInputConnection<T>>;
    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioParamInputConnection>>;
    renderer: T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioParamRenderer : null;
}>;
//# sourceMappingURL=audio-param-connections.d.ts.map