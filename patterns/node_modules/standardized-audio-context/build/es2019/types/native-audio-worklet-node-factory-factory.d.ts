import { TInvalidStateErrorFactory } from 'standardized-audio-context/src/types/invalid-state-error-factory';
import { TMonitorConnectionsFunction } from 'standardized-audio-context/src/types/monitor-connections-function';
import { TNativeAudioWorkletNodeFactory } from 'standardized-audio-context/src/types/native-audio-worklet-node-factory';
import { TNativeAudioWorkletNodeFakerFactory } from 'standardized-audio-context/src/types/native-audio-worklet-node-faker-factory';
import { TNativeGainNodeFactory } from 'standardized-audio-context/src/types/native-gain-node-factory';
import { TNotSupportedErrorFactory } from 'standardized-audio-context/src/types/not-supported-error-factory';
export type TNativeAudioWorkletNodeFactoryFactory = (createInvalidStateError: TInvalidStateErrorFactory, createNativeAudioWorkletNodeFaker: TNativeAudioWorkletNodeFakerFactory, createNativeGainNode: TNativeGainNodeFactory, createNotSupportedError: TNotSupportedErrorFactory, monitorConnections: TMonitorConnectionsFunction) => TNativeAudioWorkletNodeFactory;
//# sourceMappingURL=native-audio-worklet-node-factory-factory.d.ts.map