import { TAnalyserNodeConstructor } from 'standardized-audio-context/src/types/analyser-node-constructor';
import { TAnalyserNodeRendererFactory } from 'standardized-audio-context/src/types/analyser-node-renderer-factory';
import { TAudioNodeConstructor } from 'standardized-audio-context/src/types/audio-node-constructor';
import { TGetNativeContextFunction } from 'standardized-audio-context/src/types/get-native-context-function';
import { TIndexSizeErrorFactory } from 'standardized-audio-context/src/types/index-size-error-factory';
import { TIsNativeOfflineAudioContextFunction } from 'standardized-audio-context/src/types/is-native-offline-audio-context-function';
import { TNativeAnalyserNodeFactory } from 'standardized-audio-context/src/types/native-analyser-node-factory';
export type TAnalyserNodeConstructorFactory = (audioNodeConstructor: TAudioNodeConstructor, createAnalyserNodeRenderer: TAnalyserNodeRendererFactory, createIndexSizeError: TIndexSizeErrorFactory, createNativeAnalyserNode: TNativeAnalyserNodeFactory, getNativeContext: TGetNativeContextFunction, isNativeOfflineAudioContext: TIsNativeOfflineAudioContextFunction) => TAnalyserNodeConstructor;
//# sourceMappingURL=analyser-node-constructor-factory.d.ts.map