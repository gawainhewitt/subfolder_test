import { IAudioNode, IAudioNodeRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from 'standardized-audio-context/src/interfaces';
import { TContext } from 'standardized-audio-context/src/types/context';
import { TNativeAudioNode } from 'standardized-audio-context/src/types/native-audio-node';
export type TAudioNodeConstructor = new <T extends TContext, EventMap extends Record<string, Event> = {}>(context: T, isActive: boolean, nativeAudioNode: TNativeAudioNode, audioNodeRenderer: T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioNodeRenderer<T, IAudioNode<T, EventMap>> : null) => IAudioNode<T, EventMap>;
//# sourceMappingURL=audio-node-constructor.d.ts.map