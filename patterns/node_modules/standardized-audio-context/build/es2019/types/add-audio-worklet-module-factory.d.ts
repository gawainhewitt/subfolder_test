import { TAddAudioWorkletModuleFunction } from 'standardized-audio-context/src/types/add-audio-worklet-module-function';
import { TCacheTestResultFunction } from 'standardized-audio-context/src/types/cache-test-result-function';
import { TContext } from 'standardized-audio-context/src/types/context';
import { TEvaluateSourceFunction } from 'standardized-audio-context/src/types/evaluate-source-function';
import { TExposeCurrentFrameAndCurrentTimeFunction } from 'standardized-audio-context/src/types/expose-current-frame-and-current-time-function';
import { TFetchSourceFunction } from 'standardized-audio-context/src/types/fetch-source-function';
import { TGetNativeContextFunction } from 'standardized-audio-context/src/types/get-native-context-function';
import { TGetOrCreateBackupOfflineAudioContextFunction } from 'standardized-audio-context/src/types/get-or-create-backup-offline-audio-context-function';
import { TIsNativeOfflineAudioContextFunction } from 'standardized-audio-context/src/types/is-native-offline-audio-context-function';
import { TNativeAudioWorkletNodeConstructor } from 'standardized-audio-context/src/types/native-audio-worklet-node-constructor';
import { TNotSupportedErrorFactory } from 'standardized-audio-context/src/types/not-supported-error-factory';
import { TWindow } from 'standardized-audio-context/src/types/window';
export type TAddAudioWorkletModuleFactory = (cacheTestResult: TCacheTestResultFunction, createNotSupportedError: TNotSupportedErrorFactory, evaluateSource: TEvaluateSourceFunction, exposeCurrentFrameAndCurrentTime: TExposeCurrentFrameAndCurrentTimeFunction, fetchSource: TFetchSourceFunction, getNativeContext: TGetNativeContextFunction, getOrCreateBackupOfflineAudioContext: TGetOrCreateBackupOfflineAudioContextFunction, isNativeOfflineAudioContext: TIsNativeOfflineAudioContextFunction, nativeAudioWorkletNodeConstructor: null | TNativeAudioWorkletNodeConstructor, ongoingRequests: WeakMap<TContext, Map<string, Promise<void>>>, resolvedRequests: WeakMap<TContext, Set<string>>, testAudioWorkletProcessorPostMessageSupport: () => Promise<boolean>, window: TWindow) => TAddAudioWorkletModuleFunction;
//# sourceMappingURL=add-audio-worklet-module-factory.d.ts.map