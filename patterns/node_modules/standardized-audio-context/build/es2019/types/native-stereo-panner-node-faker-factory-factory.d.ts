import { TMonitorConnectionsFunction } from 'standardized-audio-context/src/types/monitor-connections-function';
import { TNativeChannelMergerNodeFactory } from 'standardized-audio-context/src/types/native-channel-merger-node-factory';
import { TNativeChannelSplitterNodeFactory } from 'standardized-audio-context/src/types/native-channel-splitter-node-factory';
import { TNativeGainNodeFactory } from 'standardized-audio-context/src/types/native-gain-node-factory';
import { TNativeStereoPannerNodeFakerFactory } from 'standardized-audio-context/src/types/native-stereo-panner-node-faker-factory';
import { TNativeWaveShaperNodeFactory } from 'standardized-audio-context/src/types/native-wave-shaper-node-factory';
import { TNotSupportedErrorFactory } from 'standardized-audio-context/src/types/not-supported-error-factory';
export type TNativeStereoPannerNodeFakerFactoryFactory = (createNativeChannelMergerNode: TNativeChannelMergerNodeFactory, createNativeChannelSplitterNode: TNativeChannelSplitterNodeFactory, createNativeGainNode: TNativeGainNodeFactory, createNativeWaveShaperNode: TNativeWaveShaperNodeFactory, createNotSupportedError: TNotSupportedErrorFactory, monitorConnections: TMonitorConnectionsFunction) => TNativeStereoPannerNodeFakerFactory;
//# sourceMappingURL=native-stereo-panner-node-faker-factory-factory.d.ts.map